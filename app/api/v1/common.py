from rest_framework.pagination import PageNumberPagination


class CustomPagination(PageNumberPagination):
    page_size = 60
    page_size_query_param = 'pageSize'
    max_page_size = 120

    def get_paginated_response(self, *args, **kwargs):
        response = super().get_paginated_response(
            *args, **kwargs)
        response.data['totalPages'] = self.page.paginator.num_pages
        return response

    # –Ø —Ç–∞–∫ –æ–±–Ω–∞—Ä—É–∂–∏–ª —á—Ç–æ —ç—Ç—É —Å—Ö–µ–º—É —è –Ω–µ –º–æ–≥—É –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–µ—Ä–µ–∑ `@extend_schema`
    # –∏ —Ç–æ —á—Ç–æ —ç—Ç–∞ —Å—Ö–µ–º–∞ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö ListAPIView, —á—Ç–æ –∑–∞—Å—Ç–∞–≤–∏–ª–æ –º–µ–Ω—è –±–æ–ª–µ–µ
    # –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é —Ç–µ–ø–µ—Ä—åüòπ
    def get_paginated_response_schema(self, *args, **kwargs):
        schema = super().get_paginated_response_schema(
            *args, **kwargs)
        schema['properties']['totalPages'] = {
            'type': 'integer',
            'example': 123,
        }
        return schema
